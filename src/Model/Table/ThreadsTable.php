<?php
/**
 * Created by PhpStorm.
 * User: snguyenone
 * Date: 9/27/18
 * Time: 19:31
 */

namespace App\Model\Table;


use Cake\ORM\Query;

class ThreadsTable extends AppTable
{
	public function initialize(array $config)
	{
		$this->addBehavior('Timestamp');
		$this->hasMany('Messages');
	}
	
	public function find($type = 'all', $options = [])
	{
		return parent::find($type, $options); // TODO: Change the autogenerated stub
	}
	
	/**
	 * @param $userId
	 * @param array $condition
	 * @param int $limit
	 * @return \Cake\ORM\Query
	 */
	public function getThreadPerUser($userId, array $condition = [], $limit = 1000)
	{
		return $this
				->find()
				->where($condition)
				->where('Threads.user_send_id = ' . $userId . ' OR Threads.user_reply_id = ' .$userId)
				->limit($limit)
				->order(['Threads.id' => 'DESC']);
	}
	
	/**
	 * @param $userId
	 * @param array $condition
	 * @param int $isRead
	 * @return array|Query
	 */
	public function getMessagesPerThread($userId, array $condition = [], $isRead = 0)
	{
		return $this->getThreadPerUser($userId)
			->contain(['Messages' => function(Query $q) use ($isRead) {
					return $q->where(['Messages.is_read' => $isRead]);
				}
			])->where($condition);
	}
	
}